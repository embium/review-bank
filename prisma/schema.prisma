// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id             String  @id @default(uuid())
  username       String  @unique
  imageUrl       String  @db.Text
  externalUserId String  @unique
  bio            String? @db.Text

  role    UserRole
  reviews Review[]
  ratings Rating[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  name      String

  entity Entity[]

  parentCategory   Category? @relation("CategoryParent", fields: [parentCategoryId], references: [id], onDelete: Cascade)
  parentCategoryId String?

  childrenCategories Category[] @relation("CategoryParent")
}

model Entity {
  id String @id @default(cuid())

  title   String
  body    String   @db.Text
  ratings Rating[]

  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
}

model Rating {
  id     String @id @default(cuid())
  rating Int

  user   User   @relation(fields: [userId], references: [id])
  userId String

  review Review[]

  entity   Entity @relation(fields: [entityId], references: [id], onDelete: Cascade)
  entityId String
}

model Review {
  id    String @id @default(cuid())
  title String
  body  String @db.Text

  user   User   @relation(fields: [userId], references: [id])
  userId String

  rating   Rating @relation(fields: [ratingId], references: [id], onDelete: Cascade)
  ratingId String
}
